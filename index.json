{"repository_name":"tensorflow_lite","body":"# tensorflow_lite\n\n[![CI](https://github.com/spider-gazelle/tensorflow_lite/actions/workflows/ci.yml/badge.svg)](https://github.com/spider-gazelle/tensorflow_lite/actions/workflows/ci.yml) A library for running TF Lite models\n\n* once you've trained a model in TensorFlow you can convert it to [TF Lite](https://www.tensorflow.org/lite/models/convert/convert_models#command_line_tool_) for production use\n* inspect the TF Lite model using [netron.app](https://netron.app/)\n* some [good TF models](https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/tf2_detection_zoo.md) for object detection (need conversion)\n\nAlso see the [project documentation](https://spider-gazelle.github.io/tensorflow_lite/TensorflowLite/Client.html)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     tensorflow_lite:\n       github: spider-gazelle/tensorflow_lite\n   ```\n\n2. Run `shards install`\n\n## Usage\n\nSee the specs for basic usage or have a look at [imagine](https://github.com/stakach/imagine/blob/master/src/imagine/models/example_object_detection.cr)\n\n```crystal\nrequire \"tensorflow_lite\"\n```\n\nyou can use the example metadata extractor to obtain the metadata for TF Lite models downloaded from [tfhub.dev](https://tfhub.dev/s?deployment-format=lite)\n\n### With and EdgeTPU\n\nSuch as a Coral USB device\n\n```crystal\nrequire \"tensorflow_lite/edge_tpu\"\n```\n\nTo install the edge tpu delegate:\n\n```bash\n# Add Google Cloud public key\nRUN wget -q -O - https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/coral-edgetpu.gpg\n\n# Add Coral packages repository\nRUN echo \"deb [signed-by=/etc/apt/trusted.gpg.d/coral-edgetpu.gpg] https://packages.cloud.google.com/apt coral-edgetpu-stable main\" | tee /etc/apt/sources.list.d/coral-edgetpu.list\n\n# install the lib\nsudo apt update\nsudo apt install libedgetpu-dev\n```\n\nTo install the [Coral USB drivers](https://coral.ai/docs/accelerator/get-started/#requirements)\n\n```bash\nsudo apt install libedgetpu1-std\n# OR for max frequency\nsudo apt install libedgetpu1-max\n\n# unplug and re-plug the coral or run this\nsudo systemctl restart udev\n```\n\nNOTE:: when using a coral and running `lsusb` you need to look for either:\n\n* Global Unichip Corp.\n* Google Inc.\n\nafter running something on the chip it will [change identity to Google Inc.](https://www.reddit.com/r/Proxmox/comments/nmsknx/proxmox_vm_ubuntu_2004_connect_google_coral_usb/)\n\nAnd you need to include the Google identity version in any docker files.\n\n## Development\n\nTo update tensorflow lite bindings `./generate_bindings.sh`\n\n### lib installation\n\nRequires [libtensorflow](https://www.tensorflow.org/install/lang_c) to be installed, this is handled automatically by `./build_tensorflowlite.sh`\n\n* there is a [guide to building it](https://www.tensorflow.org/lite/guide/build_cmake)\n* you can use `./build_tensorflowlite.sh` to automate this\n* then requires `export LD_LIBRARY_PATH=/usr/local/lib` to run\n* test if installed successfully `crystal ./src/tensorflow_lite.cr`\n  * this will output `Launching with tensorflow lite vx.x.x`\n\nNOTE:: the lib is installed for local use via a postinstall script.\nMake sure to distribute `libtensorflowlite_c.so` with your production app\n\n## Contributing\n\n1. Fork it (<https://github.com/your-github-user/tensorflow_lite/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n* [Stephen von Takach](https://github.com/stakach) - creator and maintainer\n","program":{"html_id":"tensorflow_lite/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"tensorflow_lite","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"tensorflow_lite/TensorflowLite","path":"TensorflowLite.html","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite","abstract":false,"locations":[{"filename":"src/tensorflow_lite.cr","line_number":7,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite.cr#L7"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"1.5.0\""}],"doc":"TensorFlow Lite is a set of tools provided by Google to run TensorFlow models on mobile, embedded, and IoT devices.\n\nIt enables on-device machine learning inference with low latency and a small binary size, which are crucial requirements for these types of devices.","summary":"<p>TensorFlow Lite is a set of tools provided by Google to run TensorFlow models on mobile, embedded, and IoT devices.</p>","class_methods":[{"html_id":"schema_version-class-method","name":"schema_version","abstract":false,"location":{"filename":"src/tensorflow_lite.cr","line_number":20,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite.cr#L20"},"def":{"name":"schema_version","visibility":"Public","body":"LibTensorflowLite.schema_version"}},{"html_id":"version-class-method","name":"version","doc":"the version of the tensorflow lite library in use","summary":"<p>the version of the tensorflow lite library in use</p>","abstract":false,"location":{"filename":"src/tensorflow_lite.cr","line_number":16,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite.cr#L16"},"def":{"name":"version","visibility":"Public","body":"String.new(LibTensorflowLite.version)"}}],"types":[{"html_id":"tensorflow_lite/TensorflowLite/Client","path":"TensorflowLite/Client.html","kind":"class","full_name":"TensorflowLite::Client","name":"Client","abstract":false,"superclass":{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"tensorflow_lite/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"tensorflow_lite/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"tensorflow_lite/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/client.cr","line_number":6,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L6"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"tensorflow_lite/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"namespace":{"html_id":"tensorflow_lite/TensorflowLite","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite"},"doc":"provides a simplified way to load and manipulate the tensorflow interpreter\n\nthe indexable module provides simplified access to the input tensors","summary":"<p>provides a simplified way to load and manipulate the tensorflow interpreter</p>","constructors":[{"html_id":"new(model:Bytes|Path|Model|String,delegate:Delegate|Nil=nil,threads:Int|Nil=nil,&on_error:String->Nil)-class-method","name":"new","doc":"Configures the tensorflow interpreter with the options provided","summary":"<p>Configures the tensorflow interpreter with the options provided</p>","abstract":false,"args":[{"name":"model","external_name":"model","restriction":"Bytes | Path | Model | String"},{"name":"delegate","default_value":"nil","external_name":"delegate","restriction":"Delegate | ::Nil"},{"name":"threads","default_value":"nil","external_name":"threads","restriction":"Int | ::Nil"}],"args_string":"(model : Bytes | Path | Model | String, delegate : Delegate | Nil = nil, threads : Int | Nil = nil, &on_error : String -> Nil)","args_html":"(model : Bytes | Path | <a href=\"../TensorflowLite/Model.html\">Model</a> | String, delegate : <a href=\"../TensorflowLite/Delegate.html\">Delegate</a> | Nil = <span class=\"n\">nil</span>, threads : Int | Nil = <span class=\"n\">nil</span>, &on_error : String -> Nil)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":10,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L10"},"def":{"name":"new","args":[{"name":"model","external_name":"model","restriction":"Bytes | Path | Model | String"},{"name":"delegate","default_value":"nil","external_name":"delegate","restriction":"Delegate | ::Nil"},{"name":"threads","default_value":"nil","external_name":"threads","restriction":"Int | ::Nil"}],"yields":1,"block_arity":1,"block_arg":{"name":"on_error","external_name":"on_error","restriction":"(String -> Nil)"},"visibility":"Public","body":"_ = allocate\n_.initialize(model, delegate, threads, &on_error) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(model:Bytes|Path|Model|String,delegate:Delegate|Nil=nil,threads:Int|Nil=nil)-class-method","name":"new","doc":"Configures the tensorflow interpreter with the options provided","summary":"<p>Configures the tensorflow interpreter with the options provided</p>","abstract":false,"args":[{"name":"model","external_name":"model","restriction":"Bytes | Path | Model | String"},{"name":"delegate","default_value":"nil","external_name":"delegate","restriction":"Delegate | ::Nil"},{"name":"threads","default_value":"nil","external_name":"threads","restriction":"Int | ::Nil"}],"args_string":"(model : Bytes | Path | Model | String, delegate : Delegate | Nil = nil, threads : Int | Nil = nil)","args_html":"(model : Bytes | Path | <a href=\"../TensorflowLite/Model.html\">Model</a> | String, delegate : <a href=\"../TensorflowLite/Delegate.html\">Delegate</a> | Nil = <span class=\"n\">nil</span>, threads : Int | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":32,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L32"},"def":{"name":"new","args":[{"name":"model","external_name":"model","restriction":"Bytes | Path | Model | String"},{"name":"delegate","default_value":"nil","external_name":"delegate","restriction":"Delegate | ::Nil"},{"name":"threads","default_value":"nil","external_name":"threads","restriction":"Int | ::Nil"}],"visibility":"Public","body":"Client.new(model, delegate, threads) do |error_message|\n  Log.warn do\n    error_message\n  end\nend"}}],"instance_methods":[{"html_id":"input_tensor(*args,**options)-instance-method","name":"input_tensor","doc":"input tensor details for manipulation and loading of input data","summary":"<p>input tensor details for manipulation and loading of input data</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":49,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L49"},"def":{"name":"input_tensor","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@interpreter.input_tensor(*args, **options)"}},{"html_id":"input_tensor(*args,**options,&)-instance-method","name":"input_tensor","doc":"input tensor details for manipulation and loading of input data","summary":"<p>input tensor details for manipulation and loading of input data</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":49,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L49"},"def":{"name":"input_tensor","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@interpreter.input_tensor(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"input_tensor_count(*args,**options)-instance-method","name":"input_tensor_count","doc":"input tensor details for manipulation and loading of input data","summary":"<p>input tensor details for manipulation and loading of input data</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":49,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L49"},"def":{"name":"input_tensor_count","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@interpreter.input_tensor_count(*args, **options)"}},{"html_id":"input_tensor_count(*args,**options,&)-instance-method","name":"input_tensor_count","doc":"input tensor details for manipulation and loading of input data","summary":"<p>input tensor details for manipulation and loading of input data</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":49,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L49"},"def":{"name":"input_tensor_count","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@interpreter.input_tensor_count(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"interpreter:Interpreter-instance-method","name":"interpreter","abstract":false,"location":{"filename":"src/tensorflow_lite/client.cr","line_number":38,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L38"},"def":{"name":"interpreter","return_type":"Interpreter","visibility":"Public","body":"@interpreter"}},{"html_id":"invoke(*args,**options)-instance-method","name":"invoke","doc":"run the model, processing the input tensors and updating the output tensors","summary":"<p>run the model, processing the input tensors and updating the output tensors</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":52,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L52"},"def":{"name":"invoke","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@interpreter.invoke(*args, **options)"}},{"html_id":"invoke(*args,**options,&)-instance-method","name":"invoke","doc":"run the model, processing the input tensors and updating the output tensors","summary":"<p>run the model, processing the input tensors and updating the output tensors</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":52,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L52"},"def":{"name":"invoke","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@interpreter.invoke(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"invoke!(*args,**options)-instance-method","name":"invoke!","doc":"run the model, processing the input tensors and updating the output tensors","summary":"<p>run the model, processing the input tensors and updating the output tensors</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":52,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L52"},"def":{"name":"invoke!","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@interpreter.invoke!(*args, **options)"}},{"html_id":"invoke!(*args,**options,&)-instance-method","name":"invoke!","doc":"run the model, processing the input tensors and updating the output tensors","summary":"<p>run the model, processing the input tensors and updating the output tensors</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":52,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L52"},"def":{"name":"invoke!","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@interpreter.invoke!(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"model:Model-instance-method","name":"model","abstract":false,"location":{"filename":"src/tensorflow_lite/client.cr","line_number":36,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L36"},"def":{"name":"model","return_type":"Model","visibility":"Public","body":"@model"}},{"html_id":"num_threads(*args,**options)-instance-method","name":"num_threads","doc":"This controls the number of CPU threads that the interpreter will use for its computations.","summary":"<p>This controls the number of CPU threads that the interpreter will use for its computations.</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":41,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L41"},"def":{"name":"num_threads","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@options.num_threads(*args, **options)"}},{"html_id":"num_threads(*args,**options,&)-instance-method","name":"num_threads","doc":"This controls the number of CPU threads that the interpreter will use for its computations.","summary":"<p>This controls the number of CPU threads that the interpreter will use for its computations.</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":41,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L41"},"def":{"name":"num_threads","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@options.num_threads(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"on_error(&callback:String->Nil)-instance-method","name":"on_error","doc":"provide a callback to receive any error messages","summary":"<p>provide a callback to receive any error messages</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/client.cr","line_number":44,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L44"},"def":{"name":"on_error","yields":1,"block_arity":1,"block_arg":{"name":"callback","external_name":"callback","restriction":"(String -> Nil)"},"visibility":"Public","body":"options.on_error(&callback)"}},{"html_id":"options:InterpreterOptions-instance-method","name":"options","abstract":false,"location":{"filename":"src/tensorflow_lite/client.cr","line_number":37,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L37"},"def":{"name":"options","return_type":"InterpreterOptions","visibility":"Public","body":"@options"}},{"html_id":"output(index:Int=0)-instance-method","name":"output","doc":"returns the output tensor at the provided index","summary":"<p>returns the output tensor at the provided index</p>","abstract":false,"args":[{"name":"index","default_value":"0","external_name":"index","restriction":"Int"}],"args_string":"(index : Int = 0)","args_html":"(index : Int = <span class=\"n\">0</span>)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":68,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L68"},"def":{"name":"output","args":[{"name":"index","default_value":"0","external_name":"index","restriction":"Int"}],"visibility":"Public","body":"output_tensor(index)"}},{"html_id":"output_tensor(*args,**options)-instance-method","name":"output_tensor","doc":"output tensors details, used to obtain the results of an invokation","summary":"<p>output tensors details, used to obtain the results of an invokation</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":55,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L55"},"def":{"name":"output_tensor","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@interpreter.output_tensor(*args, **options)"}},{"html_id":"output_tensor(*args,**options,&)-instance-method","name":"output_tensor","doc":"output tensors details, used to obtain the results of an invokation","summary":"<p>output tensors details, used to obtain the results of an invokation</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":55,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L55"},"def":{"name":"output_tensor","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@interpreter.output_tensor(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"output_tensor_count(*args,**options)-instance-method","name":"output_tensor_count","doc":"output tensors details, used to obtain the results of an invokation","summary":"<p>output tensors details, used to obtain the results of an invokation</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":55,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L55"},"def":{"name":"output_tensor_count","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@interpreter.output_tensor_count(*args, **options)"}},{"html_id":"output_tensor_count(*args,**options,&)-instance-method","name":"output_tensor_count","doc":"output tensors details, used to obtain the results of an invokation","summary":"<p>output tensors details, used to obtain the results of an invokation</p>","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/tensorflow_lite/client.cr","line_number":55,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L55"},"def":{"name":"output_tensor_count","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@interpreter.output_tensor_count(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"outputs-instance-method","name":"outputs","doc":"returns an array of output tensors","summary":"<p>returns an array of output tensors</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/client.cr","line_number":73,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L73"},"def":{"name":"outputs","visibility":"Public","body":"(0...output_tensor_count).map do |index|\n  output_tensor(index)\nend"}},{"html_id":"size-instance-method","name":"size","doc":"the number of input tensors","summary":"<p>the number of input tensors</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/client.cr","line_number":63,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/client.cr#L63"},"def":{"name":"size","visibility":"Public","body":"input_tensor_count"}}]},{"html_id":"tensorflow_lite/TensorflowLite/Delegate","path":"TensorflowLite/Delegate.html","kind":"class","full_name":"TensorflowLite::Delegate","name":"Delegate","abstract":true,"superclass":{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/delegate.cr","line_number":6,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/delegate.cr#L6"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"tensorflow_lite/TensorflowLite/EdgeTPU/Delegate","kind":"class","full_name":"TensorflowLite::EdgeTPU::Delegate","name":"Delegate"}],"namespace":{"html_id":"tensorflow_lite/TensorflowLite","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite"},"doc":"Delegates enable hardware acceleration of TensorFlow Lite models by leveraging on-device accelerators such as the GPU and Digital Signal Processor (DSP).\n\nThis base class allows us to track any delegates added when configuring interpreter options","summary":"<p>Delegates enable hardware acceleration of TensorFlow Lite models by leveraging on-device accelerators such as the GPU and Digital Signal Processor (DSP).</p>","instance_methods":[{"html_id":"to_unsafe:Pointer(LibTensorflowLite::OpaqueDelegate)-instance-method","name":"to_unsafe","abstract":true,"location":{"filename":"src/tensorflow_lite/delegate.cr","line_number":7,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/delegate.cr#L7"},"def":{"name":"to_unsafe","return_type":"Pointer(LibTensorflowLite::OpaqueDelegate)","visibility":"Public","body":""}}]},{"html_id":"tensorflow_lite/TensorflowLite/EdgeTPU","path":"TensorflowLite/EdgeTPU.html","kind":"module","full_name":"TensorflowLite::EdgeTPU","name":"EdgeTPU","abstract":false,"locations":[{"filename":"src/tensorflow_lite/edge_tpu.cr","line_number":7,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu.cr#L7"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tensorflow_lite/TensorflowLite","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite"},"doc":"An Edge TPU (Tensor Processing Unit) is a small ASIC (Application-Specific Integrated Circuit) designed for accelerating machine learning workloads at the edge, that is, on devices like smartphones, IoT devices, and embedded systems.\n\nGoogle's Coral product line includes various devices that incorporate the Edge TPU, such as the Coral Dev Board, the Coral USB Accelerator, and various system-on-modules (SoMs) and PCI-E cards.","summary":"<p>An Edge TPU (Tensor Processing Unit) is a small ASIC (Application-Specific Integrated Circuit) designed for accelerating machine learning workloads at the edge, that is, on devices like smartphones, IoT devices, and embedded systems.</p>","class_methods":[{"html_id":"devices:Array(Device)-class-method","name":"devices","doc":"the list of Edge TPU devices available on the system","summary":"<p>the list of Edge TPU devices available on the system</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/edge_tpu.cr","line_number":17,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu.cr#L17"},"def":{"name":"devices","return_type":"Array(Device)","visibility":"Public","body":"if (value = @@devices).nil?\n  @@devices = (device_obj.list)\nelse\n  value\nend"}},{"html_id":"version:String-class-method","name":"version","doc":"the version of the edge tpu library in use","summary":"<p>the version of the edge tpu library in use</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/edge_tpu.cr","line_number":9,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu.cr#L9"},"def":{"name":"version","return_type":"String","visibility":"Public","body":"String.new(LibEdgeTPU.version)"}}],"types":[{"html_id":"tensorflow_lite/TensorflowLite/EdgeTPU/Delegate","path":"TensorflowLite/EdgeTPU/Delegate.html","kind":"class","full_name":"TensorflowLite::EdgeTPU::Delegate","name":"Delegate","abstract":false,"superclass":{"html_id":"tensorflow_lite/TensorflowLite/Delegate","kind":"class","full_name":"TensorflowLite::Delegate","name":"Delegate"},"ancestors":[{"html_id":"tensorflow_lite/TensorflowLite/Delegate","kind":"class","full_name":"TensorflowLite::Delegate","name":"Delegate"},{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/edge_tpu/delegate.cr","line_number":4,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu/delegate.cr#L4"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tensorflow_lite/TensorflowLite/EdgeTPU","kind":"module","full_name":"TensorflowLite::EdgeTPU","name":"EdgeTPU"},"doc":"a delegate that can be used with InterpreterOptions#add_delegate","summary":"<p>a delegate that can be used with InterpreterOptions#add_delegate</p>","constructors":[{"html_id":"new(type,path:String)-class-method","name":"new","abstract":false,"args":[{"name":"type","external_name":"type","restriction":""},{"name":"path","external_name":"path","restriction":"String"}],"args_string":"(type, path : String)","args_html":"(type, path : String)","location":{"filename":"src/tensorflow_lite/edge_tpu/delegate.cr","line_number":5,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu/delegate.cr#L5"},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":""},{"name":"path","external_name":"path","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(type, path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"tensorflow_lite/TensorflowLite/EdgeTPU/Device","path":"TensorflowLite/EdgeTPU/Device.html","kind":"struct","full_name":"TensorflowLite::EdgeTPU::Device","name":"Device","abstract":false,"superclass":{"html_id":"tensorflow_lite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"tensorflow_lite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"tensorflow_lite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/edge_tpu/device.cr","line_number":4,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu/device.cr#L4"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tensorflow_lite/TensorflowLite/EdgeTPU","kind":"module","full_name":"TensorflowLite::EdgeTPU","name":"EdgeTPU"},"doc":"the file path to and type of Edge TPU device","summary":"<p>the file path to and type of Edge TPU device</p>","constructors":[{"html_id":"new(device:LibEdgeTPU::Device)-class-method","name":"new","abstract":false,"args":[{"name":"device","external_name":"device","restriction":"LibEdgeTPU::Device"}],"args_string":"(device : LibEdgeTPU::Device)","args_html":"(device : LibEdgeTPU::Device)","location":{"filename":"src/tensorflow_lite/edge_tpu/device.cr","line_number":5,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu/device.cr#L5"},"def":{"name":"new","args":[{"name":"device","external_name":"device","restriction":"LibEdgeTPU::Device"}],"visibility":"Public","body":"_ = allocate\n_.initialize(device)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"path:String-instance-method","name":"path","doc":"the path to the device","summary":"<p>the path to the device</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/edge_tpu/device.cr","line_number":17,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu/device.cr#L17"},"def":{"name":"path","return_type":"String","visibility":"Public","body":"@path"}},{"html_id":"to_delegate-instance-method","name":"to_delegate","doc":"creates a delegate object that can be added to with InterpreterOptions#add_delegate","summary":"<p>creates a delegate object that can be added to with InterpreterOptions#add_delegate</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/edge_tpu/device.cr","line_number":23,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu/device.cr#L23"},"def":{"name":"to_delegate","visibility":"Public","body":"EdgeTPU::Delegate.new(@type, @path)"}},{"html_id":"type:Type-instance-method","name":"type","doc":"the type of device at the path listed","summary":"<p>the type of device at the path listed</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/edge_tpu/device.cr","line_number":14,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu/device.cr#L14"},"def":{"name":"type","return_type":"Type","visibility":"Public","body":"@type"}}],"types":[{"html_id":"tensorflow_lite/TensorflowLite/EdgeTPU/Device/Type","path":"TensorflowLite/EdgeTPU/Device/Type.html","kind":"alias","full_name":"TensorflowLite::EdgeTPU::Device::Type","name":"Type","abstract":false,"locations":[{"filename":"src/tensorflow_lite/edge_tpu/device.cr","line_number":11,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/edge_tpu/device.cr#L11"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":true,"aliased":"LibEdgeTPU::DeviceType","aliased_html":"LibEdgeTPU::DeviceType","const":false,"constants":[{"id":"EdgetpuApexPci","name":"EdgetpuApexPci","value":"0"},{"id":"EdgetpuApexUsb","name":"EdgetpuApexUsb","value":"1"}],"namespace":{"html_id":"tensorflow_lite/TensorflowLite/EdgeTPU/Device","kind":"struct","full_name":"TensorflowLite::EdgeTPU::Device","name":"Device"}}]}]},{"html_id":"tensorflow_lite/TensorflowLite/Interpreter","path":"TensorflowLite/Interpreter.html","kind":"class","full_name":"TensorflowLite::Interpreter","name":"Interpreter","abstract":false,"superclass":{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/interpreter.cr","line_number":5,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L5"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tensorflow_lite/TensorflowLite","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite"},"doc":"The Interpreter takes a model, loads it, and allows you to run (or \"interpret\") the model, i.e., to use it to make predictions based on input data.","summary":"<p>The Interpreter takes a model, loads it, and allows you to run (or &quot;interpret&quot;) the model, i.e., to use it to make predictions based on input data.</p>","constructors":[{"html_id":"new(model:Model,options:InterpreterOptions)-class-method","name":"new","doc":"provide the model and options required for inference","summary":"<p>provide the model and options required for inference</p>","abstract":false,"args":[{"name":"model","external_name":"model","restriction":"Model"},{"name":"options","external_name":"options","restriction":"InterpreterOptions"}],"args_string":"(model : Model, options : InterpreterOptions)","args_html":"(model : <a href=\"../TensorflowLite/Model.html\">Model</a>, options : <a href=\"../TensorflowLite/InterpreterOptions.html\">InterpreterOptions</a>)","location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":11,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L11"},"def":{"name":"new","args":[{"name":"model","external_name":"model","restriction":"Model"},{"name":"options","external_name":"options","restriction":"InterpreterOptions"}],"visibility":"Public","body":"_ = allocate\n_.initialize(model, options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"input_tensor(index:Int):Tensor-instance-method","name":"input_tensor","doc":"returns the requested input tensor for manipulation and loading of input data","summary":"<p>returns the requested input tensor for manipulation and loading of input data</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Tensor","args_html":"(index : Int) : <a href=\"../TensorflowLite/Tensor.html\">Tensor</a>","location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":49,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L49"},"def":{"name":"input_tensor","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"Tensor","visibility":"Public","body":"if index >= input_tensor_count || index < 0\n  raise(IndexError.new)\nend\nTensor.new(LibTensorflowLite.interpreter_get_input_tensor(self, index.to_i32))\n"}},{"html_id":"input_tensor_count:Int32-instance-method","name":"input_tensor_count","doc":"the number of input tensors that are used to feed data into the model","summary":"<p>the number of input tensors that are used to feed data into the model</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":44,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L44"},"def":{"name":"input_tensor_count","return_type":"Int32","visibility":"Public","body":"if (value = @input_tensor_count).nil?\n  @input_tensor_count = ((LibTensorflowLite.interpreter_get_input_tensor_count(self)).to_i)\nelse\n  value\nend"}},{"html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends a String representation of this object\nwhich includes its class name, its object address\nand the values of all instance variables.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).inspect # => #<Person:0x10fd31f20 @name=\"John\", @age=32>\n```","summary":"<p>Appends a String representation of this object which includes its class name, its object address and the values of all instance variables.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":91,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L91"},"def":{"name":"inspect","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << ({{ @type.name.id.stringify }})\nnum_inputs = input_tensor_count\n(io << \"(\\n  input count: \") << num_inputs\n(0...num_inputs).each do |index|\n  tensor = input_tensor(index)\n  (io << \"\\n  input - \") << tensor.name\n  (io << \"\\n    type: \") << tensor.type\n  begin\n    (io << \"\\n    inputs: \") << tensor.io_count\n  rescue\n    (io << \"\\n    bytesize: \") << tensor.bytesize\n  end\n  (io << \"\\n    dimensions: \") << (tensor.map(&.to_s).join(\"x\"))\nend\nnum_outputs = output_tensor_count\n(io << \"\\n  output count: \") << num_outputs\n(0...num_outputs).each do |index|\n  tensor = output_tensor(index)\n  (io << \"\\n  output - \") << tensor.name\n  (io << \"\\n    type: \") << tensor.type\n  begin\n    (io << \"\\n    outputs: \") << tensor.io_count\n  rescue\n    (io << \"\\n    bytesize: \") << tensor.bytesize\n  end\n  (io << \"\\n    dimensions: \") << (tensor.map(&.to_s).join(\"x\"))\nend\nio << \"\\n)\"\n"}},{"html_id":"invoke:Status-instance-method","name":"invoke","doc":"runs the model and returns the result status\n\nNOTE: the results are stored in the output tensors","summary":"<p>runs the model and returns the result status</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":80,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L80"},"def":{"name":"invoke","return_type":"Status","visibility":"Public","body":"LibTensorflowLite.interpreter_invoke(self)"}},{"html_id":"invoke!-instance-method","name":"invoke!","doc":"run the model, processing the input tensors and updating the output tensors","summary":"<p>run the model, processing the input tensors and updating the output tensors</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":85,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L85"},"def":{"name":"invoke!","visibility":"Public","body":"result = invoke\nif result.ok?\nelse\n  raise(InvokeError.new(\"invoke failed with #{result}\"))\nend\nself\n"}},{"html_id":"model:Model-instance-method","name":"model","doc":"the model this interpreter is running","summary":"<p>the model this interpreter is running</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":29,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L29"},"def":{"name":"model","return_type":"Model","visibility":"Public","body":"@model"}},{"html_id":"options:InterpreterOptions-instance-method","name":"options","doc":"the options used to initialize this interpreter","summary":"<p>the options used to initialize this interpreter</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":32,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L32"},"def":{"name":"options","return_type":"InterpreterOptions","visibility":"Public","body":"@options"}},{"html_id":"output_tensor(index:Int):Tensor-instance-method","name":"output_tensor","doc":"returns the requested output tensor for results extraction","summary":"<p>returns the requested output tensor for results extraction</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Tensor","args_html":"(index : Int) : <a href=\"../TensorflowLite/Tensor.html\">Tensor</a>","location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":60,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L60"},"def":{"name":"output_tensor","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"Tensor","visibility":"Public","body":"if index >= output_tensor_count || index < 0\n  raise(IndexError.new)\nend\nTensor.new(LibTensorflowLite.interpreter_get_output_tensor(self, index.to_i32))\n"}},{"html_id":"output_tensor_count:Int32-instance-method","name":"output_tensor_count","doc":"the number of output tensors, used to obtain the results of an invokation","summary":"<p>the number of output tensors, used to obtain the results of an invokation</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/interpreter.cr","line_number":55,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L55"},"def":{"name":"output_tensor_count","return_type":"Int32","visibility":"Public","body":"if (value = @output_tensor_count).nil?\n  @output_tensor_count = ((LibTensorflowLite.interpreter_get_output_tensor_count(self)).to_i)\nelse\n  value\nend"}}],"types":[{"html_id":"tensorflow_lite/TensorflowLite/Interpreter/InvokeError","path":"TensorflowLite/Interpreter/InvokeError.html","kind":"class","full_name":"TensorflowLite::Interpreter::InvokeError","name":"InvokeError","abstract":false,"superclass":{"html_id":"tensorflow_lite/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},"ancestors":[{"html_id":"tensorflow_lite/RuntimeError","kind":"class","full_name":"RuntimeError","name":"RuntimeError"},{"html_id":"tensorflow_lite/SystemError","kind":"module","full_name":"SystemError","name":"SystemError"},{"html_id":"tensorflow_lite/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/interpreter.cr","line_number":7,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L7"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tensorflow_lite/TensorflowLite/Interpreter","kind":"class","full_name":"TensorflowLite::Interpreter","name":"Interpreter"},"doc":"raised if an invokation of a model fails","summary":"<p>raised if an invokation of a model fails</p>"},{"html_id":"tensorflow_lite/TensorflowLite/Interpreter/Status","path":"TensorflowLite/Interpreter/Status.html","kind":"alias","full_name":"TensorflowLite::Interpreter::Status","name":"Status","abstract":false,"locations":[{"filename":"src/tensorflow_lite/interpreter.cr","line_number":65,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter.cr#L65"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":true,"aliased":"LibTensorflowLite::Status","aliased_html":"LibTensorflowLite::Status","const":false,"constants":[{"id":"ApplicationError","name":"ApplicationError","value":"3"},{"id":"Cancelled","name":"Cancelled","value":"8"},{"id":"DelegateDataNotFound","name":"DelegateDataNotFound","value":"4"},{"id":"DelegateDataReadError","name":"DelegateDataReadError","value":"6"},{"id":"DelegateDataWriteError","name":"DelegateDataWriteError","value":"5"},{"id":"DelegateError","name":"DelegateError","value":"2"},{"id":"Error","name":"Error","value":"1"},{"id":"Ok","name":"Ok","value":"0"},{"id":"UnresolvedOps","name":"UnresolvedOps","value":"7"}],"namespace":{"html_id":"tensorflow_lite/TensorflowLite/Interpreter","kind":"class","full_name":"TensorflowLite::Interpreter","name":"Interpreter"}}]},{"html_id":"tensorflow_lite/TensorflowLite/InterpreterOptions","path":"TensorflowLite/InterpreterOptions.html","kind":"class","full_name":"TensorflowLite::InterpreterOptions","name":"InterpreterOptions","abstract":false,"superclass":{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/interpreter_options.cr","line_number":12,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter_options.cr#L12"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tensorflow_lite/TensorflowLite","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite"},"doc":"Interpreter options provide a way to configure various aspects of the TensorFlow Lite runtime","summary":"<p>Interpreter options provide a way to configure various aspects of the TensorFlow Lite runtime</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/tensorflow_lite/interpreter_options.cr","line_number":13,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter_options.cr#L13"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"add_delegate(delegate:Delegate)-instance-method","name":"add_delegate","doc":"Delegates are mechanisms that allow the interpreter to offload some or all of the model execution to hardware accelerators, like the GPU, DSP, or specialized Neural Processing Units (NPUs).","summary":"<p>Delegates are mechanisms that allow the interpreter to offload some or all of the model execution to hardware accelerators, like the GPU, DSP, or specialized Neural Processing Units (NPUs).</p>","abstract":false,"args":[{"name":"delegate","external_name":"delegate","restriction":"Delegate"}],"args_string":"(delegate : Delegate)","args_html":"(delegate : <a href=\"../TensorflowLite/Delegate.html\">Delegate</a>)","location":{"filename":"src/tensorflow_lite/interpreter_options.cr","line_number":58,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter_options.cr#L58"},"def":{"name":"add_delegate","args":[{"name":"delegate","external_name":"delegate","restriction":"Delegate"}],"visibility":"Public","body":"@delegates << delegate\nLibTensorflowLite.interpreter_options_add_delegate(self, delegate)\nself\n"}},{"html_id":"num_threads(count:Int)-instance-method","name":"num_threads","doc":"This controls the number of CPU threads that the interpreter will use for its computations.\nThis can be useful for improving performance on devices with multiple CPU cores.","summary":"<p>This controls the number of CPU threads that the interpreter will use for its computations.</p>","abstract":false,"args":[{"name":"count","external_name":"count","restriction":"Int"}],"args_string":"(count : Int)","args_html":"(count : Int)","location":{"filename":"src/tensorflow_lite/interpreter_options.cr","line_number":30,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter_options.cr#L30"},"def":{"name":"num_threads","args":[{"name":"count","external_name":"count","restriction":"Int"}],"visibility":"Public","body":"LibTensorflowLite.interpreter_options_set_num_threads(self, count.to_i32)"}},{"html_id":"on_error(&callback:String->Nil)-instance-method","name":"on_error","doc":"define a callback to receive any error messages","summary":"<p>define a callback to receive any error messages</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/interpreter_options.cr","line_number":35,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/interpreter_options.cr#L35"},"def":{"name":"on_error","yields":1,"block_arity":1,"block_arg":{"name":"callback","external_name":"callback","restriction":"(String -> Nil)"},"visibility":"Public","body":"callback_ptr = Box.box(callback)\n@callback_ref = callback_ptr\nLibTensorflowLite.interpreter_options_set_error_reporter(self, ->(boxed_callback, raw_message, raw_args) do\n  result = C.vasprintf(out msg, raw_message, raw_args)\n  if result != -1\n    formatted_msg = String.new(msg)\n    LibC.free(msg.as(Pointer(Void)))\n  else\n    formatted_msg = String.new(raw_message)\n  end\n  unboxed_callback = Box(typeof(callback)).unbox(boxed_callback)\n  unboxed_callback.call(formatted_msg)\n  nil\nend, callback_ptr)\n"}}]},{"html_id":"tensorflow_lite/TensorflowLite/Model","path":"TensorflowLite/Model.html","kind":"class","full_name":"TensorflowLite::Model","name":"Model","abstract":false,"superclass":{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"tensorflow_lite/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/model.cr","line_number":9,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/model.cr#L9"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tensorflow_lite/TensorflowLite","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite"},"doc":"Models are a machine learning model that has been trained using TensorFlow and then converted into a format that is optimized for on-device use.\n\nA TensorFlow Lite model typically has the file extension .tflite.\nThe process of converting a regular TensorFlow model to this format often involves a few steps, such as \"freezing\" the model (converting all its variables to constants), and then applying optimizations like quantization to reduce the size of the model and improve its execution speed.","summary":"<p>Models are a machine learning model that has been trained using TensorFlow and then converted into a format that is optimized for on-device use.</p>","constructors":[{"html_id":"new(bytes:Bytes)-class-method","name":"new","doc":"use this to if the tflite model is already loaded into memory","summary":"<p>use this to if the tflite model is already loaded into memory</p>","abstract":false,"args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(bytes : Bytes)","args_html":"(bytes : Bytes)","location":{"filename":"src/tensorflow_lite/model.cr","line_number":11,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/model.cr#L11"},"def":{"name":"new","args":[{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"visibility":"Public","body":"_ = allocate\n_.initialize(bytes)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(path:Path)-class-method","name":"new","doc":"specify a path to load the tflite model from a file","summary":"<p>specify a path to load the tflite model from a file</p>","abstract":false,"args":[{"name":"path","external_name":"path","restriction":"Path"}],"args_string":"(path : Path)","args_html":"(path : Path)","location":{"filename":"src/tensorflow_lite/model.cr","line_number":18,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/model.cr#L18"},"def":{"name":"new","args":[{"name":"path","external_name":"path","restriction":"Path"}],"visibility":"Public","body":"_ = allocate\n_.initialize(path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"tensorflow_lite/TensorflowLite/Tensor","path":"TensorflowLite/Tensor.html","kind":"struct","full_name":"TensorflowLite::Tensor","name":"Tensor","abstract":false,"superclass":{"html_id":"tensorflow_lite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"tensorflow_lite/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"tensorflow_lite/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"tensorflow_lite/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"tensorflow_lite/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"tensorflow_lite/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"tensorflow_lite/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/tensorflow_lite/tensor.cr","line_number":17,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L17"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"tensorflow_lite/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"namespace":{"html_id":"tensorflow_lite/TensorflowLite","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite"},"doc":"A tensor is a multi-dimensional array used as the basic data structure.\nThis array can have any number of dimensions, and is used to represent data of various types, such as numeric, boolean, or string values.\n\nThe dimensions of a tensor are often referred to as \"ranks\". For instance:\n\n* A rank 0 tensor is a scalar (a single number).\n* A rank 1 tensor is a vector (a 1D array).\n* A rank 2 tensor is a matrix (a 2D array).\n* A rank 3 tensor is a 3D array, and so on for higher dimensions.\n\nEach tensor in TensorFlow is also associated with a data type (such as float32, int32, or string) and a shape.\nThe shape of a tensor is the number of elements in each dimension.\n\nFor example, a 3x3 matrix has a shape of [3, 3].","summary":"<p>A tensor is a multi-dimensional array used as the basic data structure.</p>","constructors":[{"html_id":"new(tf_tensor_ptr:LibTensorflowLite::Tensor)-class-method","name":"new","abstract":false,"args":[{"name":"tf_tensor_ptr","external_name":"tf_tensor_ptr","restriction":"LibTensorflowLite::Tensor"}],"args_string":"(tf_tensor_ptr : LibTensorflowLite::Tensor)","args_html":"(tf_tensor_ptr : LibTensorflowLite::Tensor)","location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":20,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L20"},"def":{"name":"new","args":[{"name":"tf_tensor_ptr","external_name":"tf_tensor_ptr","restriction":"LibTensorflowLite::Tensor"}],"visibility":"Public","body":"_ = allocate\n_.initialize(tf_tensor_ptr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"as_f-instance-method","name":"as_f","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":136,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L136"},"def":{"name":"as_f","visibility":"Public","body":"as_f64"}},{"html_id":"as_f32-instance-method","name":"as_f32","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":126,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L126"},"def":{"name":"as_f32","visibility":"Public","body":"to_type(Float32)"}},{"html_id":"as_f64-instance-method","name":"as_f64","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":131,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L131"},"def":{"name":"as_f64","visibility":"Public","body":"to_type(Int8)"}},{"html_id":"as_i-instance-method","name":"as_i","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":171,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L171"},"def":{"name":"as_i","visibility":"Public","body":"as_i32"}},{"html_id":"as_i16-instance-method","name":"as_i16","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":156,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L156"},"def":{"name":"as_i16","visibility":"Public","body":"to_type(Int16)"}},{"html_id":"as_i32-instance-method","name":"as_i32","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":166,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L166"},"def":{"name":"as_i32","visibility":"Public","body":"to_type(Int32)"}},{"html_id":"as_i64-instance-method","name":"as_i64","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":181,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L181"},"def":{"name":"as_i64","visibility":"Public","body":"to_type(Int64)"}},{"html_id":"as_i8-instance-method","name":"as_i8","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":146,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L146"},"def":{"name":"as_i8","visibility":"Public","body":"to_type(Int8)"}},{"html_id":"as_u16-instance-method","name":"as_u16","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":151,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L151"},"def":{"name":"as_u16","visibility":"Public","body":"to_type(UInt16)"}},{"html_id":"as_u32-instance-method","name":"as_u32","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":161,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L161"},"def":{"name":"as_u32","visibility":"Public","body":"to_type(UInt32)"}},{"html_id":"as_u64-instance-method","name":"as_u64","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":176,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L176"},"def":{"name":"as_u64","visibility":"Public","body":"to_type(UInt64)"}},{"html_id":"as_u8-instance-method","name":"as_u8","doc":"provides a view into the tensor buffer as the requested type","summary":"<p>provides a view into the tensor buffer as the requested type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":141,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L141"},"def":{"name":"as_u8","visibility":"Public","body":"to_type(UInt8)"}},{"html_id":"bytesize:Int32-instance-method","name":"bytesize","doc":"the size of the buffer backing this tensor","summary":"<p>the size of the buffer backing this tensor</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":42,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L42"},"def":{"name":"bytesize","return_type":"Int32","visibility":"Public","body":"if (value = @bytesize).nil?\n  @bytesize = ((LibTensorflowLite.tensor_byte_size(self)).to_i)\nelse\n  value\nend"}},{"html_id":"dimension_size(index:Int):Int32-instance-method","name":"dimension_size","doc":"returns the number elements in this dimension or rank index","summary":"<p>returns the number elements in this dimension or rank index</p>","abstract":false,"args":[{"name":"index","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Int32","args_html":"(index : Int) : Int32","location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":63,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L63"},"def":{"name":"dimension_size","args":[{"name":"index","external_name":"index","restriction":"Int"}],"return_type":"Int32","visibility":"Public","body":"if index >= dimensions || index < 0\n  raise(IndexError.new)\nend\nunsafe_fetch(index)\n"}},{"html_id":"dimensions:Int32-instance-method","name":"dimensions","doc":"Returns the number of dimensions (sometimes referred to as rank) of the Tensor.\nWill be 0 for a scalar, 1 for a vector, 2 for a matrix, 3 for a 3-dimensional tensor etc.","summary":"<p>Returns the number of dimensions (sometimes referred to as rank) of the Tensor.</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":48,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L48"},"def":{"name":"dimensions","return_type":"Int32","visibility":"Public","body":"if (value = @dimensions).nil?\n  @dimensions = ((LibTensorflowLite.tensor_num_dims(self)).to_i)\nelse\n  value\nend"}},{"html_id":"io_count-instance-method","name":"io_count","doc":"attempts to calculate the number on inputs/outputs based on the type","summary":"<p>attempts to calculate the number on inputs/outputs based on the type</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":85,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L85"},"def":{"name":"io_count","visibility":"Public","body":"klass_size = case type\nwhen .float32?\n  sizeof(Float32)\nwhen .float64?\n  sizeof(Float64)\nwhen .u_int8?\n  sizeof(UInt8)\nwhen .int8?\n  sizeof(Int8)\nwhen .u_int16?\n  sizeof(UInt16)\nwhen .int16?\n  sizeof(Int16)\nwhen .u_int32?\n  sizeof(UInt32)\nwhen .int32?\n  sizeof(Int32)\nwhen .u_int64?\n  sizeof(UInt64)\nwhen .int64?\n  sizeof(Int64)\nelse\n  return self.reduce do |acc, i|\n    acc * i\n  end\nend\nbytesize // klass_size\n"}},{"html_id":"name:String-instance-method","name":"name","doc":"The friendly name of the tensor","summary":"<p>The friendly name of the tensor</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":39,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L39"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"if (value = @name).nil?\n  @name = (String.new(LibTensorflowLite.tensor_name(self)))\nelse\n  value\nend"}},{"html_id":"rank-instance-method","name":"rank","doc":"Returns the number of dimensions (sometimes referred to as rank) of the Tensor.\nWill be 0 for a scalar, 1 for a vector, 2 for a matrix, 3 for a 3-dimensional tensor etc.","summary":"<p>Returns the number of dimensions (sometimes referred to as rank) of the Tensor.</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":53,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L53"},"def":{"name":"rank","visibility":"Public","body":"dimensions"}},{"html_id":"raw_data:Bytes-instance-method","name":"raw_data","doc":"buffer that makes up the tensor input","summary":"<p>buffer that makes up the tensor input</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":74,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L74"},"def":{"name":"raw_data","return_type":"Bytes","visibility":"Public","body":"data_ptr = LibTensorflowLite.tensor_data(self)\nSlice.new(data_ptr.as(Pointer(UInt8)), bytesize)\n"}},{"html_id":"size-instance-method","name":"size","doc":"Returns the number of dimensions (sometimes referred to as rank) of the Tensor.\nWill be 0 for a scalar, 1 for a vector, 2 for a matrix, 3 for a 3-dimensional tensor etc.","summary":"<p>Returns the number of dimensions (sometimes referred to as rank) of the Tensor.</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":58,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L58"},"def":{"name":"size","visibility":"Public","body":"dimensions"}},{"html_id":"to_slice-instance-method","name":"to_slice","doc":"buffer that makes up the tensor input","summary":"<p>buffer that makes up the tensor input</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":80,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L80"},"def":{"name":"to_slice","visibility":"Public","body":"raw_data"}},{"html_id":"type:Type-instance-method","name":"type","doc":"The datatype this tensor holds\n\nthe type of data it expects as input or provides as output","summary":"<p>The datatype this tensor holds</p>","abstract":false,"location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":34,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L34"},"def":{"name":"type","return_type":"Type","visibility":"Public","body":"if (value = @type).nil?\n  @type = (LibTensorflowLite.tensor_type(self))\nelse\n  value\nend"}}],"macros":[{"html_id":"to_type(klass)-macro","name":"to_type","doc":"type casts the tensor buffer into the appropriate crystal lang type.\n\nreturns a Slice of the provided klass against the buffer for manipulation","summary":"<p>type casts the tensor buffer into the appropriate crystal lang type.</p>","abstract":false,"args":[{"name":"klass","external_name":"klass","restriction":""}],"args_string":"(klass)","args_html":"(klass)","location":{"filename":"src/tensorflow_lite/tensor.cr","line_number":117,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L117"},"def":{"name":"to_type","args":[{"name":"klass","external_name":"klass","restriction":""}],"visibility":"Public","body":"    the_type = type\n    raise TypeCastError.new(\"can't convert #{the_type} to #{ \n{{ klass }}\n }\") unless the_type == Type::\n{{ klass }}\n\n    data_ptr = LibTensorflowLite.tensor_data(self)\n    count = bytesize // sizeof(\n{{ klass }}\n)\n    Slice.new(data_ptr.as(Pointer(\n{{ klass }}\n)), count)\n  \n"}}],"types":[{"html_id":"tensorflow_lite/TensorflowLite/Tensor/Type","path":"TensorflowLite/Tensor/Type.html","kind":"alias","full_name":"TensorflowLite::Tensor::Type","name":"Type","abstract":false,"locations":[{"filename":"src/tensorflow_lite/tensor.cr","line_number":29,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/tensor.cr#L29"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":true,"aliased":"LibTensorflowLite::Type","aliased_html":"LibTensorflowLite::Type","const":false,"constants":[{"id":"Bool","name":"Bool","value":"6"},{"id":"Complex128","name":"Complex128","value":"12"},{"id":"Complex64","name":"Complex64","value":"8"},{"id":"Float16","name":"Float16","value":"10"},{"id":"Float32","name":"Float32","value":"1"},{"id":"Float64","name":"Float64","value":"11"},{"id":"Int16","name":"Int16","value":"7"},{"id":"Int32","name":"Int32","value":"2"},{"id":"Int4","name":"Int4","value":"18"},{"id":"Int64","name":"Int64","value":"4"},{"id":"Int8","name":"Int8","value":"9"},{"id":"NoType","name":"NoType","value":"0"},{"id":"Resource","name":"Resource","value":"14"},{"id":"String","name":"String","value":"5"},{"id":"UInt16","name":"UInt16","value":"17"},{"id":"UInt32","name":"UInt32","value":"16"},{"id":"UInt64","name":"UInt64","value":"13"},{"id":"UInt8","name":"UInt8","value":"3"},{"id":"Variant","name":"Variant","value":"15"}],"namespace":{"html_id":"tensorflow_lite/TensorflowLite/Tensor","kind":"struct","full_name":"TensorflowLite::Tensor","name":"Tensor"},"doc":"the type of tensor, i.e. Float32 or Int8 etc","summary":"<p>the type of tensor, i.e.</p>"}]},{"html_id":"tensorflow_lite/TensorflowLite/Utilities","path":"TensorflowLite/Utilities.html","kind":"module","full_name":"TensorflowLite::Utilities","name":"Utilities","abstract":false,"locations":[{"filename":"src/tensorflow_lite/utilities/extract_labels.cr","line_number":4,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/utilities/extract_labels.cr#L4"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"tensorflow_lite/TensorflowLite","kind":"module","full_name":"TensorflowLite","name":"TensorflowLite"},"types":[{"html_id":"tensorflow_lite/TensorflowLite/Utilities/ExtractLabels","path":"TensorflowLite/Utilities/ExtractLabels.html","kind":"module","full_name":"TensorflowLite::Utilities::ExtractLabels","name":"ExtractLabels","abstract":false,"locations":[{"filename":"src/tensorflow_lite/utilities/extract_labels.cr","line_number":4,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/utilities/extract_labels.cr#L4"}],"repository_name":"tensorflow_lite","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MAGIC_ZIP","name":"MAGIC_ZIP","value":"Bytes[80, 75, 3, 4]","doc":"File type detection\nhttps://github.com/sindresorhus/file-type/blob/main/core.js\nhttps://en.wikipedia.org/wiki/ZIP_(file_format)","summary":"<p>File type detection https://github.com/sindresorhus/file-type/blob/main/core.js https://en.wikipedia.org/wiki/ZIP_(file_format)</p>"}],"namespace":{"html_id":"tensorflow_lite/TensorflowLite/Utilities","kind":"module","full_name":"TensorflowLite::Utilities","name":"Utilities"},"class_methods":[{"html_id":"from(input:Path,metadata_file:String=\".txt\"):Hash(Int32,String)|Nil-class-method","name":"from","doc":"extracts the label names from tensorflow lite model at the path specified","summary":"<p>extracts the label names from tensorflow lite model at the path specified</p>","abstract":false,"args":[{"name":"input","external_name":"input","restriction":"Path"},{"name":"metadata_file","default_value":"\".txt\"","external_name":"metadata_file","restriction":"String"}],"args_string":"(input : Path, metadata_file : String = \".txt\") : Hash(Int32, String) | Nil","args_html":"(input : Path, metadata_file : String = <span class=\"s\">&quot;.txt&quot;</span>) : Hash(Int32, String) | Nil","location":{"filename":"src/tensorflow_lite/utilities/extract_labels.cr","line_number":11,"url":"https://github.com/spider-gazelle/tensorflow_lite/blob/cd75e7bb2e9f6f5e85e0e5cf837e2bee29623758/src/tensorflow_lite/utilities/extract_labels.cr#L11"},"def":{"name":"from","args":[{"name":"input","external_name":"input","restriction":"Path"},{"name":"metadata_file","default_value":"\".txt\"","external_name":"metadata_file","restriction":"String"}],"return_type":"Hash(Int32, String) | ::Nil","visibility":"Public","body":"file = File.new(input)\nbytes = Bytes.new(file.size)\nfile.read_fully(bytes)\nfile.close\nio = IO::Memory.new(bytes)\nfound = 0\nfiles = [] of String\nread_buffer = Bytes.new(MAGIC_ZIP.bytesize)\nremaining = bytes.size\nwhile remaining >= MAGIC_ZIP.bytesize\n  read_pos = io.pos\n  io.read_fully(read_buffer)\n  if read_buffer == MAGIC_ZIP\n    begin\n      zip_data = IO::Memory.new(bytes[read_pos..-1])\n      Compress::Zip::Reader.open(zip_data) do |zip|\n        zip.each_entry do |entry|\n          if entry.file?\n            found = found + 1\n            Log.debug do\n              \"found file -> #{entry.filename}\"\n            end\n            if entry.filename.ends_with?(metadata_file)\n              labels = {} of Int32 => String\n              idx = 0\n              entry.io.each_line do |line|\n                labels[idx] = line\n                idx = idx + 1\n              end\n              return labels\n            else\n              files << entry.filename\n            end\n          end\n        end\n      end\n      break\n    rescue Compress::Zip::Error\n    end\n  end\n  io.pos = read_pos + 1\n  remaining = bytes.size - io.pos\nend\nLog.info do\n  \"found #{found} files, no matches: #{files.join(\", \")}\"\nend\nnil\n"}}]}]}]}]}}